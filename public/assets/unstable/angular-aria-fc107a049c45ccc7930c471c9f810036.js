!function(window,angular){"use strict";function $AriaProvider(){function camelCase(input){return input.replace(/-./g,function(letter){return letter[1].toUpperCase()})}function watchExpr(attrName,ariaAttr,negate){var ariaCamelName=camelCase(ariaAttr);return function(scope,elem,attr){config[ariaCamelName]&&!attr[ariaCamelName]&&scope.$watch(attr[attrName],function(boolVal){negate&&(boolVal=!boolVal),elem.attr(ariaAttr,boolVal)})}}var config={ariaHidden:!0,ariaChecked:!0,ariaDisabled:!0,ariaRequired:!0,ariaInvalid:!0,ariaMultiline:!0,ariaValue:!0,tabindex:!0};this.config=function(newConfig){config=angular.extend(config,newConfig)},this.$get=function(){return{config:function(key){return config[camelCase(key)]},$$watchExpr:watchExpr}}}var ngAriaModule=angular.module("ngAria",["ng"]).provider("$aria",$AriaProvider),ngAriaTabindex=["$aria",function($aria){return function(scope,elem){$aria.config("tabindex")&&!elem.attr("tabindex")&&elem.attr("tabindex",0)}}];ngAriaModule.directive("ngShow",["$aria",function($aria){return $aria.$$watchExpr("ngShow","aria-hidden",!0)}]).directive("ngHide",["$aria",function($aria){return $aria.$$watchExpr("ngHide","aria-hidden",!1)}]).directive("ngModel",["$aria",function($aria){function shouldAttachAttr(attr,elem){return $aria.config(attr)&&!elem.attr(attr)}function getShape(attr,elem){var type=attr.type,role=attr.role;return"checkbox"===(type||role)||"menuitemcheckbox"===role?"checkbox":"radio"===(type||role)||"menuitemradio"===role?"radio":"range"===type||"progressbar"===role||"slider"===role?"range":"textbox"===(type||role)||"TEXTAREA"===elem[0].nodeName?"multiline":""}return{restrict:"A",require:"?ngModel",link:function(scope,elem,attr,ngModel){function ngAriaWatchModelValue(){return ngModel.$modelValue}function getRadioReaction(){return needsTabIndex?(needsTabIndex=!1,function(newVal){var boolVal=newVal===attr.value;elem.attr("aria-checked",boolVal),elem.attr("tabindex",0-!boolVal)}):function(newVal){elem.attr("aria-checked",newVal===attr.value)}}function ngAriaCheckboxReaction(newVal){elem.attr("aria-checked",!!newVal)}var shape=getShape(attr,elem),needsTabIndex=shouldAttachAttr("tabindex",elem);switch(shape){case"radio":case"checkbox":shouldAttachAttr("aria-checked",elem)&&scope.$watch(ngAriaWatchModelValue,"radio"===shape?getRadioReaction():ngAriaCheckboxReaction);break;case"range":$aria.config("ariaValue")&&(attr.min&&!elem.attr("aria-valuemin")&&elem.attr("aria-valuemin",attr.min),attr.max&&!elem.attr("aria-valuemax")&&elem.attr("aria-valuemax",attr.max),elem.attr("aria-valuenow")||scope.$watch(ngAriaWatchModelValue,function(newVal){elem.attr("aria-valuenow",newVal)}));break;case"multiline":shouldAttachAttr("aria-multiline",elem)&&elem.attr("aria-multiline",!0)}needsTabIndex&&elem.attr("tabindex",0),ngModel.$validators.required&&shouldAttachAttr("aria-required",elem)&&scope.$watch(function(){return ngModel.$error.required},function(newVal){elem.attr("aria-required",!!newVal)}),shouldAttachAttr("aria-invalid",elem)&&scope.$watch(function(){return ngModel.$invalid},function(newVal){elem.attr("aria-invalid",!!newVal)})}}}]).directive("ngDisabled",["$aria",function($aria){return $aria.$$watchExpr("ngDisabled","aria-disabled")}]).directive("ngMessages",function(){return{restrict:"A",require:"?ngMessages",link:function(scope,elem){elem.attr("aria-live")||elem.attr("aria-live","assertive")}}}).directive("ngClick",ngAriaTabindex).directive("ngDblclick",ngAriaTabindex)}(window,window.angular);