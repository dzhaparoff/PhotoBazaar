angular.module("contenteditable",[]).directive("contenteditable",["$timeout",function($timeout){return{restrict:"A",require:"?ngModel",link:function(scope,element,attrs,ngModel){if(ngModel){var opts={};angular.forEach(["stripBr","noLineBreaks","selectNonEditable","moveCaretToEndOnChange"],function(opt){var o=attrs[opt];opts[opt]=o&&"false"!==o}),element.bind("input",function(){scope.$apply(function(){var html,html2,rerender;html=element.html(),rerender=!1,opts.stripBr&&(html=html.replace(/<br>$/,"")),opts.noLineBreaks&&(html2=html.replace(/<div>/g,"").replace(/<br>/g,"").replace(/<\/div>/g,""),html2!==html&&(rerender=!0,html=html2)),ngModel.$setViewValue(html),rerender&&ngModel.$render(),""===html&&$timeout(function(){element[0].blur(),element[0].focus()})})});var oldRender=ngModel.$render;ngModel.$render=function(){var el,el2,range,sel;oldRender&&oldRender(),element.html(ngModel.$viewValue||""),opts.moveCaretToEndOnChange&&(el=element[0],range=document.createRange(),sel=window.getSelection(),el.childNodes.length>0?(el2=el.childNodes[el.childNodes.length-1],range.setStartAfter(el2)):range.setStartAfter(el),range.collapse(!0),sel.removeAllRanges(),sel.addRange(range))},opts.selectNonEditable&&element.bind("click",function(e){var range,sel,target;target=e.toElement,target!==this&&"false"===angular.element(target).attr("contenteditable")&&(range=document.createRange(),sel=window.getSelection(),range.setStartBefore(target),range.setEndAfter(target),sel.removeAllRanges(),sel.addRange(range))})}}}}]);